---
layout: post
title:  "第一篇日志"
date:   2019-07-02 13:51:49 +0800
categories: jekyll update
comments: true

---

大家好，欢迎来到我的博客。

---
## 为什么要搭建一个博客？

作为一个码字爱好者，我很喜欢在笔记软件上自己写写（Well，不是真正意义上的“写”）。只是一直写来写去，都是给自己看。

某一天我意识到，应该将我的部分笔记整理之后输出，供所有人参考讨论。于是萌生了把自己写的东西发到网上的想法。遂开始了不断尝试博客站的历程。（说干就干！）

我是一个产品经理，又是一个Nerd（也许你能看得出来），这使得我很关心这些博客网站的用户体验，国内外的博客网站我尝试过很多，还是没能确定到底在哪里发布文章。

国内的博客站，包括新浪博客，简书等等，说实话，很丑陋。无数广告和垃圾内容充斥其中。“挽回你男友的5个方法”，“女人有这3个特征，说明心里没有你”，“5个动作让你远离职场天花板”。这些垃圾内容我看的要吐了。所以我想有一个比较纯净的环境来展示内容，以便我的读者（如果我真的有什么读者的话）能有一个沉浸式的体验，不受别的干扰。（别看着看着旁边有什么植发广告，编程培训或者情感建议）

国外的博客站，比如Wordpress，Medium，我也尝试过。在国内网站面临的问题上，表现要好得多。但是国外网站有两个主要的缺点：一是由于众所周知的原因，需要科学上网，对于我的大部分读者不太友好；二是这些网站对中文的支持不好。因为他们的用户中，中文使用者只占很小的一部分，导致这些网站没有漂亮的中文字体，在页面设计和排版上首先考虑的也是英文。如果我的文章是英文的话，在国外网站上看起来就还不错，可一旦换成中文，字里行间就会有些别扭。

“如果自己搭一个博客会怎么样？”。我开始有了这个想法。

我会写一点点Python，写一些小脚本。在决定要自己搭博客之后，对比了Flask和Django。考虑到如果我要做这么一个轻量的小博客，似乎Flask灵活一点，于是选择了Flask。

之后就是长达两周的教学视频学习，一边看一边做。前端相关的部分我直接用了教程中的代码。两周之后，这个小博客可以登陆注册，可以发布更新文章。最后我把这个小项目发布到了heroku上面。（参见[我的第一个Flask博客][flaskblog]）感觉Flask的好处就是比较自由，想要什么功能自己写就行，坏处也是比较自由，要做一些事来重新发明轮子（也许别人已经发明了但是得我自己去找）。虽然通过写了这个小app，我对于网页开发有了更深的认识，但是我暂时没有时间深入的研究前端后端，从0写代码搭一个博客。

就在此时，[Jekyll][jekyll]吸引到了我的注意。

Jekyll的想法很吸引我：“让用户可以聚焦在内容上”，而不是像处理数据库、页面跳转之类的chores上。这正是我需要的。后来对比了松茸老师给我推荐的Hexo等，感觉这些site generator中，Jekyll的主题商店似乎漂亮一些（非常肤浅的原因）。那么说干就干，Jekyll UP！

花了一点时间搭好了这个博客，在此记录一下搭建过程和踩过的坑，也记录一下不断卡住后不断尝试的决心。

Here we go.

---

### 1. 安装Ruby环境

1. 安装 Homebrew —— 把安装命令粘贴进terminal。terminal卡住了几次。这一步教我几件事：
	1. 作为一个用户，要耐心；
	2. 作为一个产品，在可能卡住的时候，要提示用户：你要开始等了
	3. 学会了怎么在terminal里面科学上网
		1. curl -v ip.gs —— 查看代理状态
		2. 科学上网工具打开全局模式

2. 安装Ruby
	1. brew install ruby
	2. 在“.bash_profile”中添加“export PATH=/usr/local/opt/ruby/bin:$PATH”，如果没有“.bash_profile”的话，就在目录下用touch新建一个
	3. 安装rbenv。Stackoverflow上的大哥强烈建议安装这个，感觉和python的虚拟环境差不多。

### 2. 安装Jekyll

1. gem install —user-install bundler jekyll
2. 用ruby -v拿到ruby版本
3. 将“export PATH=$HOME/.gem/ruby/X.X.0/bin:$PATH”写进bash，将其中的X替换为版本号
4.  如果更新的ruby，那么bash里面也要更新
5. gem install jekyll bundler

做完上面这几步之后，可以用Jekyll直接生成一个网站。然后启动server，就可以在本地看到博客了。
之后，我Google了Jekyll的主题商店，挑选并且安装了主题，就是各位目前看到的样子。很符合我对于简洁清晰的要求。
最后设置一下Github Page，发布到线上，这个博客就正式上线了！

---

今后也许我会探索一下基于Jekyll的开发，让这个博客离我设想的样子更近。

最后，用一段别人的话结尾。


> I still wanted to make things, to code, to think — the architecture, to step back and see the moving parts work together. That’s the one part of me that’s always been consistent.
>
> I’m a creator by nature and I wanted to be better at it.

[jekyll]:https://jekyllrb.com
[local]:http://localhost:4000/
[flaskblog]:https://ldch97.herokuapp.com
